long long mod(int n){
    int p=1000000007;
    n=n%p;
    while(n<0)  n+=p;
    return n;
}

int Solution::nTriang(vector<int> &A) {
    int ans=0;
    sort(A.begin(),A.end());
    for(int i=0;i<A.size();i++){
        for(int j=i+1;j<A.size();j++){
            if(j+1>=A.size())    continue;
            int k=lower_bound(A.begin()+j+1,A.end(),A[i]+A[j])-A.begin() - 1;
            // cout<<i<<" "<<j<<" "<<k<<endl;
            // if(k==j+1 && A[i]+A[j]>A[k])  cout<<"1 "<<endl,ans+=1;
            // else if(k<A.size())   cout<<"2 "<<endl,
            if(k<A.size())  ans+=mod(k-j);
            ans=mod(ans);
        }
    }
    return ans;
}
